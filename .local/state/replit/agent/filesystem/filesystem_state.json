{"file_contents":{"replit.md":{"content":"# GlowOnCall - Comprehensive Beauty Service Platform\n\n## Overview\n\nGlowOnCall is a comprehensive salon-at-home booking platform inspired by GetLook.in that connects customers with professional beauticians and stylists for premium beauty services delivered at home. The platform operates across major Indian cities (Bangalore, Mumbai, Pune, Hyderabad, Delhi) and features a complete ecosystem including service booking, product sales, customer reviews, referral programs, and user authentication. This is currently a feature-rich frontend application built with vanilla HTML, CSS, and JavaScript that demonstrates a full commercial beauty platform.\n\n## User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n## System Architecture\n\n### Frontend Architecture\n- **Technology Stack**: Vanilla HTML5, CSS3, and JavaScript\n- **Design Approach**: Single-page application with smooth scrolling navigation\n- **Styling**: CSS Grid and Flexbox for responsive layouts, custom CSS with Google Fonts (Poppins) and Font Awesome icons\n- **Architecture Pattern**: Component-based structure with modular CSS and JavaScript\n\n### Backend Architecture\n- **Current State**: No backend implementation exists\n- **Future Considerations**: Will likely need a REST API for booking management, user authentication, and service provider coordination\n\n## Key Components\n\n### 1. Core Platform Pages\n- **Home Page**: Hero section with call-to-action and platform overview\n- **Services Section**: Comprehensive showcase of 6+ beauty services with ratings\n- **About Us**: Company information, features, and statistics\n- **Reviews**: Customer testimonials with rating breakdown and authenticity\n- **Products**: E-commerce section for beauty products with cart functionality\n- **FAQ**: Interactive accordion with common questions and answers\n- **Contact**: Multi-channel contact information and query form\n- **Refer & Earn**: Referral program with sharing functionality\n- **Login/Register**: Authentication modals with OTP integration\n\n### 2. Service Categories (GetLook-style)\n- **Hair Services**: Cuts, styling, hair spa treatments\n- **Skin Treatments**: Facials, clean-ups, bleaching services\n- **Nail Care**: Professional manicure and pedicure services\n- **Grooming**: Waxing and threading services\n- **Massage Treatments**: Therapeutic and relaxation massage\n- **Bridal Makeup**: Complete makeover packages for special occasions\n\n### 3. Interactive Features\n- **Service Selection**: Click-to-select cards with visual feedback\n- **Booking System**: Comprehensive form with WhatsApp integration\n- **Product Cart**: Add-to-cart functionality with status updates\n- **FAQ Accordion**: Expandable Q&A interface\n- **User Authentication**: Modal-based login/registration system\n- **Referral Sharing**: Native share API with clipboard fallback\n- **Contact Forms**: Multi-purpose query submission\n- **Navigation**: Dropdown menus and smooth scrolling\n\n### 4. Enhanced UI/UX Elements\n- **Rating System**: Star ratings and review counts for services\n- **Statistics Dashboard**: Customer, stylist, and city metrics\n- **Product Pricing**: Original vs discounted price display\n- **Notification System**: Toast notifications for user actions\n- **Loading States**: Visual feedback for async operations\n- **Mobile Responsive**: Optimized layouts for all screen sizes\n\n## Data Flow\n\n### Current Implementation\n1. **User Interaction**: Users click service cards or use dropdown selection\n2. **Form Population**: Selected services populate the booking form\n3. **Validation**: Real-time form validation provides immediate feedback\n4. **Submission**: Form data is collected (currently no backend processing)\n\n### Expected Future Flow\n1. **Service Discovery**: Users browse available services and providers\n2. **Booking Creation**: Form submission creates booking requests\n3. **Provider Matching**: System matches requests with available service providers\n4. **Confirmation**: Users receive booking confirmations and provider details\n\n## External Dependencies\n\n### Current Dependencies\n- **Google Fonts**: Poppins font family for typography\n- **Font Awesome**: Icon library for UI elements (v6.0.0)\n- **Pixabay**: Image hosting for service photos\n\n### Recommended Future Dependencies\n- **Backend Framework**: Node.js with Express or similar\n- **Database**: PostgreSQL for structured booking and user data\n- **Authentication**: JWT or OAuth for user sessions\n- **Payment Processing**: Stripe or PayPal integration\n- **Mapping Services**: Google Maps API for location services\n- **Communication**: SMS/Email services for notifications\n\n## Deployment Strategy\n\n### Current Deployment\n- **Type**: Static website hosting\n- **Requirements**: Any web server capable of serving HTML, CSS, and JavaScript files\n- **Hosting Options**: Netlify, Vercel, GitHub Pages, or traditional web hosting\n\n### Recommended Future Deployment\n- **Frontend**: Continue with static hosting for the client-side application\n- **Backend**: Cloud platform deployment (AWS, Google Cloud, or Heroku)\n- **Database**: Managed database service (AWS RDS, Google Cloud SQL)\n- **CDN**: Content delivery network for static assets and images\n- **Monitoring**: Application performance monitoring and error tracking\n- **CI/CD**: Automated testing and deployment pipelines\n\n### Development Considerations\n- The application currently lacks backend functionality for actual booking processing\n- Database schema will need to accommodate users, service providers, bookings, and services\n- Real-time features may be needed for booking status updates and provider coordination\n- Mobile responsiveness should be prioritized given the personal service nature\n- Security measures will be crucial for handling personal information and payments","size_bytes":5756},"script.js":{"content":"// Global variables\nlet selectedService = '';\n\n// DOM Elements\nconst bookingForm = document.getElementById('bookingForm');\nconst serviceCards = document.querySelectorAll('.service-card');\nconst serviceSelect = document.getElementById('service');\n\n// Initialize the application\ndocument.addEventListener('DOMContentLoaded', function() {\n    initializeApp();\n});\n\nfunction initializeApp() {\n    // Set minimum date to today\n    setMinDate();\n    \n    // Add event listeners\n    addEventListeners();\n    \n    // Initialize service selection\n    initializeServiceSelection();\n    \n    // Initialize smooth scrolling\n    initializeSmoothScrolling();\n}\n\nfunction setMinDate() {\n    const dateInput = document.getElementById('date');\n    const today = new Date();\n    const formattedDate = today.toISOString().split('T')[0];\n    dateInput.min = formattedDate;\n}\n\nfunction addEventListeners() {\n    // Form submission\n    bookingForm.addEventListener('submit', handleFormSubmission);\n    \n    // Service card clicks\n    serviceCards.forEach(card => {\n        card.addEventListener('click', handleServiceCardClick);\n    });\n    \n    // Service dropdown change\n    serviceSelect.addEventListener('change', handleServiceSelectChange);\n    \n    // Real-time validation\n    addRealTimeValidation();\n}\n\nfunction initializeServiceSelection() {\n    // Sync service cards with dropdown\n    serviceCards.forEach(card => {\n        const service = card.dataset.service;\n        card.addEventListener('click', () => {\n            selectService(service);\n        });\n    });\n}\n\nfunction initializeSmoothScrolling() {\n    // Smooth scrolling for navigation links\n    document.querySelectorAll('a[href^=\"#\"]').forEach(anchor => {\n        anchor.addEventListener('click', function (e) {\n            e.preventDefault();\n            const target = document.querySelector(this.getAttribute('href'));\n            if (target) {\n                target.scrollIntoView({\n                    behavior: 'smooth',\n                    block: 'start'\n                });\n            }\n        });\n    });\n}\n\nfunction handleServiceCardClick(event) {\n    const card = event.currentTarget;\n    const service = card.dataset.service;\n    selectService(service);\n}\n\nfunction handleServiceSelectChange(event) {\n    const service = event.target.value;\n    selectService(service);\n}\n\nfunction selectService(service) {\n    selectedService = service;\n    \n    // Update service cards visual state\n    serviceCards.forEach(card => {\n        card.classList.remove('selected');\n        if (card.dataset.service === service) {\n            card.classList.add('selected');\n        }\n    });\n    \n    // Update dropdown\n    serviceSelect.value = service;\n    \n    // Clear any previous service error\n    clearError('service');\n    validateField('service');\n}\n\nfunction addRealTimeValidation() {\n    const fields = ['fullName', 'phone', 'service', 'date', 'time', 'address'];\n    \n    fields.forEach(fieldName => {\n        const field = document.getElementById(fieldName);\n        if (field) {\n            field.addEventListener('blur', () => validateField(fieldName));\n            field.addEventListener('input', () => {\n                clearError(fieldName);\n                if (field.value.trim()) {\n                    validateField(fieldName);\n                }\n            });\n        }\n    });\n}\n\nfunction validateField(fieldName) {\n    const field = document.getElementById(fieldName);\n    const value = field.value.trim();\n    let isValid = true;\n    let errorMessage = '';\n    \n    switch (fieldName) {\n        case 'fullName':\n            if (!value) {\n                errorMessage = 'Full name is required';\n                isValid = false;\n            } else if (value.length < 2) {\n                errorMessage = 'Name must be at least 2 characters long';\n                isValid = false;\n            } else if (!/^[a-zA-Z\\s]+$/.test(value)) {\n                errorMessage = 'Name should only contain letters and spaces';\n                isValid = false;\n            }\n            break;\n            \n        case 'phone':\n            if (!value) {\n                errorMessage = 'Phone number is required';\n                isValid = false;\n            } else if (!/^[0-9]{10}$/.test(value)) {\n                errorMessage = 'Please enter a valid 10-digit phone number';\n                isValid = false;\n            }\n            break;\n            \n        case 'service':\n            if (!value) {\n                errorMessage = 'Please select a service';\n                isValid = false;\n            }\n            break;\n            \n        case 'date':\n            if (!value) {\n                errorMessage = 'Please select a date';\n                isValid = false;\n            } else {\n                const selectedDate = new Date(value);\n                const today = new Date();\n                today.setHours(0, 0, 0, 0);\n                \n                if (selectedDate < today) {\n                    errorMessage = 'Please select a future date';\n                    isValid = false;\n                }\n            }\n            break;\n            \n        case 'time':\n            if (!value) {\n                errorMessage = 'Please select a time';\n                isValid = false;\n            }\n            break;\n            \n        case 'address':\n            if (!value) {\n                errorMessage = 'Address is required';\n                isValid = false;\n            } else if (value.length < 10) {\n                errorMessage = 'Please enter a complete address';\n                isValid = false;\n            }\n            break;\n    }\n    \n    // Update field styling and error message\n    const errorElement = document.getElementById(fieldName + 'Error');\n    if (errorElement) {\n        errorElement.textContent = errorMessage;\n    }\n    \n    field.classList.remove('error', 'valid');\n    if (value) {\n        field.classList.add(isValid ? 'valid' : 'error');\n    }\n    \n    return isValid;\n}\n\nfunction clearError(fieldName) {\n    const errorElement = document.getElementById(fieldName + 'Error');\n    if (errorElement) {\n        errorElement.textContent = '';\n    }\n    \n    const field = document.getElementById(fieldName);\n    if (field) {\n        field.classList.remove('error');\n    }\n}\n\nfunction validateForm() {\n    const fields = ['fullName', 'phone', 'service', 'date', 'time', 'address'];\n    let isFormValid = true;\n    \n    fields.forEach(fieldName => {\n        const isFieldValid = validateField(fieldName);\n        if (!isFieldValid) {\n            isFormValid = false;\n        }\n    });\n    \n    return isFormValid;\n}\n\nfunction handleFormSubmission(event) {\n    event.preventDefault();\n    \n    // Validate form\n    if (!validateForm()) {\n        // Scroll to first error\n        const firstError = document.querySelector('.error');\n        if (firstError) {\n            firstError.scrollIntoView({ behavior: 'smooth', block: 'center' });\n            firstError.focus();\n        }\n        return;\n    }\n    \n    // Show loading state\n    const submitButton = document.querySelector('.submit-button');\n    submitButton.classList.add('loading');\n    submitButton.disabled = true;\n    \n    // Get form data\n    const formData = getFormData();\n    \n    // Send to WhatsApp\n    sendToWhatsApp(formData);\n    \n    // Reset loading state after a short delay\n    setTimeout(() => {\n        submitButton.classList.remove('loading');\n        submitButton.disabled = false;\n    }, 2000);\n}\n\nfunction getFormData() {\n    return {\n        fullName: document.getElementById('fullName').value.trim(),\n        phone: document.getElementById('phone').value.trim(),\n        service: document.getElementById('service').value,\n        date: document.getElementById('date').value,\n        time: document.getElementById('time').value,\n        address: document.getElementById('address').value.trim()\n    };\n}\n\nfunction formatDate(dateString) {\n    const date = new Date(dateString);\n    const day = date.getDate().toString().padStart(2, '0');\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\n    const year = date.getFullYear();\n    return `${day}-${month}-${year}`;\n}\n\nfunction sendToWhatsApp(formData) {\n    // WhatsApp number - updated to user's specified number\n    const phone = \"917892783668\";\n    \n    // Format the message\n    const message = `Hello! I'd like to book a salon service.\n\nName: ${formData.fullName}\nPhone: ${formData.phone}\nService: ${formData.service}\nDate: ${formatDate(formData.date)}\nTime: ${formData.time}\nAddress: ${formData.address}\n\nPlease confirm my appointment. Thank you!`;\n\n    // Create WhatsApp URL\n    const whatsappURL = `https://wa.me/${phone}?text=${encodeURIComponent(message)}`;\n    \n    // Open WhatsApp in new tab\n    window.open(whatsappURL, '_blank');\n    \n    // Show success message\n    showSuccessMessage();\n    \n    // Reset form after successful submission\n    setTimeout(() => {\n        resetForm();\n    }, 1000);\n}\n\nfunction showSuccessMessage() {\n    // Create and show a success notification\n    const notification = document.createElement('div');\n    notification.className = 'success-notification';\n    notification.innerHTML = `\n        <div class=\"notification-content\">\n            <i class=\"fas fa-check-circle\"></i>\n            <span>Redirecting to WhatsApp...</span>\n        </div>\n    `;\n    \n    // Add notification styles\n    notification.style.cssText = `\n        position: fixed;\n        top: 20px;\n        right: 20px;\n        background: linear-gradient(135deg, #4caf50, #45a049);\n        color: white;\n        padding: 1rem 1.5rem;\n        border-radius: 10px;\n        box-shadow: 0 4px 15px rgba(76, 175, 80, 0.3);\n        z-index: 10000;\n        animation: slideIn 0.3s ease-out;\n    `;\n    \n    // Add animation keyframes\n    if (!document.querySelector('#notification-styles')) {\n        const style = document.createElement('style');\n        style.id = 'notification-styles';\n        style.textContent = `\n            @keyframes slideIn {\n                from { transform: translateX(100%); opacity: 0; }\n                to { transform: translateX(0); opacity: 1; }\n            }\n            .notification-content {\n                display: flex;\n                align-items: center;\n                gap: 0.5rem;\n            }\n        `;\n        document.head.appendChild(style);\n    }\n    \n    document.body.appendChild(notification);\n    \n    // Remove notification after 3 seconds\n    setTimeout(() => {\n        notification.remove();\n    }, 3000);\n}\n\nfunction resetForm() {\n    // Reset form fields\n    bookingForm.reset();\n    \n    // Clear service selection\n    selectedService = '';\n    serviceCards.forEach(card => {\n        card.classList.remove('selected');\n    });\n    \n    // Clear all error messages\n    const errorElements = document.querySelectorAll('.error-message');\n    errorElements.forEach(element => {\n        element.textContent = '';\n    });\n    \n    // Clear field validation classes\n    const fields = document.querySelectorAll('.form-group input, .form-group select, .form-group textarea');\n    fields.forEach(field => {\n        field.classList.remove('error', 'valid');\n    });\n    \n    // Reset minimum date\n    setMinDate();\n}\n\n// Utility Functions\nfunction debounce(func, wait) {\n    let timeout;\n    return function executedFunction(...args) {\n        const later = () => {\n            clearTimeout(timeout);\n            func(...args);\n        };\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n    };\n}\n\n// Service Worker Registration (for PWA capabilities - optional)\nif ('serviceWorker' in navigator) {\n    window.addEventListener('load', () => {\n        // You can register a service worker here if needed for offline functionality\n        console.log('App is ready for service worker registration if needed');\n    });\n}\n\n// Handle page visibility changes\ndocument.addEventListener('visibilitychange', () => {\n    if (document.visibilityState === 'visible') {\n        // Update minimum date when user returns to the page\n        setMinDate();\n    }\n});\n\n// Add keyboard navigation for accessibility\ndocument.addEventListener('keydown', (e) => {\n    // Handle Enter key on service cards\n    if (e.key === 'Enter' && e.target.classList.contains('service-card')) {\n        e.target.click();\n    }\n});\n\n// FAQ Functionality\nfunction initializeFAQ() {\n    const faqItems = document.querySelectorAll('.faq-item');\n    \n    faqItems.forEach(item => {\n        const question = item.querySelector('.faq-question');\n        \n        question.addEventListener('click', () => {\n            const isActive = item.classList.contains('active');\n            \n            // Close all FAQ items\n            faqItems.forEach(faq => faq.classList.remove('active'));\n            \n            // Open clicked item if it wasn't active\n            if (!isActive) {\n                item.classList.add('active');\n            }\n        });\n    });\n}\n\n// Modal Functionality\nfunction initializeModals() {\n    const modal = document.getElementById('authModal');\n    const closeBtn = document.querySelector('.close');\n    const loginLinks = document.querySelectorAll('a[href=\"#login\"]');\n    const registerLinks = document.querySelectorAll('a[href=\"#register\"]');\n    \n    // Open modal for login/register links\n    loginLinks.forEach(link => {\n        link.addEventListener('click', (e) => {\n            e.preventDefault();\n            modal.style.display = 'block';\n            showTab('login');\n        });\n    });\n    \n    registerLinks.forEach(link => {\n        link.addEventListener('click', (e) => {\n            e.preventDefault();\n            modal.style.display = 'block';\n            showTab('register');\n        });\n    });\n    \n    // Close modal\n    closeBtn.addEventListener('click', () => {\n        modal.style.display = 'none';\n    });\n    \n    window.addEventListener('click', (e) => {\n        if (e.target === modal) {\n            modal.style.display = 'none';\n        }\n    });\n}\n\n// Tab Functionality\nfunction showTab(tabName) {\n    const tabs = document.querySelectorAll('.tab-content');\n    const tabBtns = document.querySelectorAll('.tab-btn');\n    \n    // Hide all tabs\n    tabs.forEach(tab => tab.classList.remove('active'));\n    tabBtns.forEach(btn => btn.classList.remove('active'));\n    \n    // Show selected tab\n    document.getElementById(tabName).classList.add('active');\n    document.querySelector(`[onclick=\"showTab('${tabName}')\"]`).classList.add('active');\n}\n\n// Contact Form Functionality\nfunction initializeContactForm() {\n    const contactForm = document.getElementById('contactForm');\n    \n    if (contactForm) {\n        contactForm.addEventListener('submit', (e) => {\n            e.preventDefault();\n            \n            // Get form data\n            const formData = new FormData(contactForm);\n            const data = Object.fromEntries(formData);\n            \n            // Show success message\n            showNotification('Thank you for your message! We will get back to you soon.', 'success');\n            \n            // Reset form\n            contactForm.reset();\n        });\n    }\n}\n\n// Product Add to Cart Functionality\nfunction initializeProducts() {\n    const addToCartBtns = document.querySelectorAll('.add-to-cart-btn');\n    \n    addToCartBtns.forEach(btn => {\n        btn.addEventListener('click', (e) => {\n            const productCard = e.target.closest('.product-card');\n            const productName = productCard.querySelector('h3').textContent;\n            \n            // Add loading state\n            btn.textContent = 'Adding...';\n            btn.disabled = true;\n            \n            setTimeout(() => {\n                btn.textContent = 'Added to Cart';\n                btn.style.background = '#4caf50';\n                \n                showNotification(`${productName} added to cart!`, 'success');\n                \n                setTimeout(() => {\n                    btn.textContent = 'Add to Cart';\n                    btn.style.background = '';\n                    btn.disabled = false;\n                }, 2000);\n            }, 1000);\n        });\n    });\n}\n\n// Refer & Earn Functionality\nfunction initializeReferral() {\n    const shareBtn = document.querySelector('.share-btn');\n    \n    if (shareBtn) {\n        shareBtn.addEventListener('click', () => {\n            const referralCode = 'GLOW2025';\n            const shareText = `Join GlowOnCall for premium beauty services at home! Use my referral code ${referralCode} and we both get ₹200 credit. Download now: https://glowoncall.com`;\n            \n            if (navigator.share) {\n                navigator.share({\n                    title: 'GlowOnCall - Beauty at Your Doorstep',\n                    text: shareText,\n                    url: 'https://glowoncall.com'\n                });\n            } else {\n                // Fallback to copying to clipboard\n                navigator.clipboard.writeText(shareText).then(() => {\n                    showNotification('Referral code copied to clipboard!', 'success');\n                });\n            }\n        });\n    }\n}\n\n// Enhanced Notification System\nfunction showNotification(message, type = 'success') {\n    // Remove existing notifications\n    const existingNotifications = document.querySelectorAll('.notification');\n    existingNotifications.forEach(notification => notification.remove());\n    \n    const notification = document.createElement('div');\n    notification.className = `notification ${type}`;\n    \n    const icon = type === 'success' ? 'fas fa-check-circle' : 'fas fa-exclamation-circle';\n    const bgColor = type === 'success' ? 'linear-gradient(135deg, #4caf50, #45a049)' : 'linear-gradient(135deg, #f44336, #d32f2f)';\n    \n    notification.innerHTML = `\n        <div class=\"notification-content\">\n            <i class=\"${icon}\"></i>\n            <span>${message}</span>\n        </div>\n    `;\n    \n    notification.style.cssText = `\n        position: fixed;\n        top: 20px;\n        right: 20px;\n        background: ${bgColor};\n        color: white;\n        padding: 1rem 1.5rem;\n        border-radius: 10px;\n        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);\n        z-index: 10000;\n        animation: slideIn 0.3s ease-out;\n        max-width: 350px;\n    `;\n    \n    document.body.appendChild(notification);\n    \n    // Auto remove after 4 seconds\n    setTimeout(() => {\n        notification.style.animation = 'slideOut 0.3s ease-in forwards';\n        setTimeout(() => notification.remove(), 300);\n    }, 4000);\n}\n\n// Authentication Forms\nfunction initializeAuthForms() {\n    const loginForm = document.getElementById('loginForm');\n    const registerForm = document.getElementById('registerForm');\n    \n    if (loginForm) {\n        loginForm.addEventListener('submit', (e) => {\n            e.preventDefault();\n            const phone = e.target.querySelector('input[type=\"tel\"]').value;\n            \n            // Simulate OTP sending\n            showNotification(`OTP sent to ${phone}. Please check your messages.`, 'success');\n            \n            // In a real app, you would send OTP here\n            setTimeout(() => {\n                document.getElementById('authModal').style.display = 'none';\n                showNotification('Welcome back! You are now logged in.', 'success');\n            }, 2000);\n        });\n    }\n    \n    if (registerForm) {\n        registerForm.addEventListener('submit', (e) => {\n            e.preventDefault();\n            const formData = new FormData(e.target);\n            const data = Object.fromEntries(formData);\n            \n            // Simulate registration\n            showNotification(`Account created successfully! Welcome ${data.name}!`, 'success');\n            \n            setTimeout(() => {\n                document.getElementById('authModal').style.display = 'none';\n            }, 1500);\n        });\n    }\n}\n\n// Page Navigation System\nfunction initializeNavigation() {\n    const navLinks = document.querySelectorAll('.nav-link, .dropdown-link');\n    const sections = document.querySelectorAll('section');\n    const serviceDetails = document.querySelectorAll('.service-detail');\n    \n    // Hide all service detail pages initially\n    serviceDetails.forEach(section => section.classList.remove('active'));\n    \n    navLinks.forEach(link => {\n        link.addEventListener('click', (e) => {\n            e.preventDefault();\n            const targetId = link.getAttribute('href').substring(1);\n            \n            // Remove active class from all nav links\n            navLinks.forEach(navLink => navLink.classList.remove('active'));\n            \n            // Add active class to clicked link\n            link.classList.add('active');\n            \n            // Handle service detail pages\n            if (targetId.startsWith('service-')) {\n                // Hide all sections\n                sections.forEach(section => {\n                    if (!section.classList.contains('service-detail')) {\n                        section.style.display = 'none';\n                    }\n                });\n                \n                // Hide all service detail pages\n                serviceDetails.forEach(section => section.classList.remove('active'));\n                \n                // Show target service detail page\n                const targetSection = document.getElementById(targetId);\n                if (targetSection) {\n                    targetSection.classList.add('active');\n                }\n            } else {\n                // Show regular sections\n                serviceDetails.forEach(section => section.classList.remove('active'));\n                sections.forEach(section => {\n                    if (!section.classList.contains('service-detail')) {\n                        section.style.display = 'block';\n                    }\n                });\n                \n                // Smooth scroll to target\n                const targetElement = document.getElementById(targetId);\n                if (targetElement) {\n                    targetElement.scrollIntoView({\n                        behavior: 'smooth',\n                        block: 'start'\n                    });\n                }\n            }\n        });\n    });\n}\n\n// Service Booking Forms\nfunction initializeServiceBooking() {\n    const bookingForms = document.querySelectorAll('.service-booking-form');\n    \n    // Set minimum date for all date inputs in service forms\n    const dateInputs = document.querySelectorAll('.service-booking-form input[type=\"date\"]');\n    dateInputs.forEach(input => {\n        const today = new Date();\n        const formattedDate = today.toISOString().split('T')[0];\n        input.min = formattedDate;\n    });\n    \n    bookingForms.forEach(form => {\n        form.addEventListener('submit', (e) => {\n            e.preventDefault();\n            \n            const formData = new FormData(form);\n            const data = Object.fromEntries(formData);\n            const serviceName = form.getAttribute('data-service');\n            \n            // Create WhatsApp message\n            let message = `Hi! I would like to book ${serviceName}.\n\n📝 Booking Details:\n👤 Name: ${data.name}\n📱 Phone: ${data.phone}\n📍 Address: ${data.address}\n📅 Date: ${data.date}\n⏰ Time: ${data.time}\n💄 Service: ${data.serviceType}`;\n\n            // Add location link if provided\n            if (data.location && data.location.trim()) {\n                message += `\\n🗺️ Google Maps: ${data.location}`;\n            }\n\n            message += `\\n\\nPlease confirm my appointment. Thank you!`;\n            \n            // Encode message for URL\n            const encodedMessage = encodeURIComponent(message);\n            \n            // WhatsApp number (as specified by user)\n            const phoneNumber = '917892783668';\n            \n            // Create WhatsApp URL\n            const whatsappUrl = `https://wa.me/${phoneNumber}?text=${encodedMessage}`;\n            \n            // Open WhatsApp\n            window.open(whatsappUrl, '_blank');\n            \n            // Show success notification\n            showNotification(`Redirecting to WhatsApp to confirm your ${serviceName} booking!`, 'success');\n        });\n    });\n}\n\n// Enhanced App Initialization\nfunction initializeApp() {\n    // Set minimum date to today\n    setMinDate();\n    \n    // Add event listeners\n    addEventListeners();\n    \n    // Initialize service selection\n    initializeServiceSelection();\n    \n    // Initialize navigation system\n    initializeNavigation();\n    \n    // Initialize service booking\n    initializeServiceBooking();\n    \n    // Initialize smooth scrolling\n    initializeSmoothScrolling();\n    \n    // Initialize new features\n    initializeFAQ();\n    initializeModals();\n    initializeContactForm();\n    initializeProducts();\n    initializeReferral();\n    initializeAuthForms();\n    \n    // Add notification styles if not present\n    addNotificationStyles();\n    \n    // Set home as active by default\n    document.querySelector('.nav-link[href=\"#home\"]')?.classList.add('active');\n}\n\n// Geolocation functionality for location picker\nfunction getCurrentLocation(button) {\n    const locationInput = button.parentElement.querySelector('input[name=\"location\"]');\n    const originalText = button.textContent;\n    \n    // Show loading state\n    button.textContent = '🔄 Getting Location...';\n    button.disabled = true;\n    \n    if (!navigator.geolocation) {\n        showNotification('Geolocation is not supported by this browser.', 'error');\n        button.textContent = originalText;\n        button.disabled = false;\n        return;\n    }\n    \n    navigator.geolocation.getCurrentPosition(\n        function(position) {\n            const latitude = position.coords.latitude;\n            const longitude = position.coords.longitude;\n            \n            // Create Google Maps link\n            const googleMapsLink = `https://www.google.com/maps?q=${latitude},${longitude}`;\n            \n            // Set the location in the input\n            locationInput.value = googleMapsLink;\n            \n            // Show success notification\n            showNotification('Location captured successfully!', 'success');\n            \n            // Reset button\n            button.textContent = '✅ Location Set';\n            button.disabled = false;\n            \n            // Reset button text after 2 seconds\n            setTimeout(() => {\n                button.textContent = originalText;\n            }, 2000);\n        },\n        function(error) {\n            let errorMessage = 'Unable to get your location. ';\n            \n            switch(error.code) {\n                case error.PERMISSION_DENIED:\n                    errorMessage += 'Please allow location access and try again.';\n                    break;\n                case error.POSITION_UNAVAILABLE:\n                    errorMessage += 'Location information is unavailable.';\n                    break;\n                case error.TIMEOUT:\n                    errorMessage += 'Location request timed out.';\n                    break;\n                default:\n                    errorMessage += 'An unknown error occurred.';\n                    break;\n            }\n            \n            showNotification(errorMessage, 'error');\n            \n            // Reset button\n            button.textContent = originalText;\n            button.disabled = false;\n        },\n        {\n            enableHighAccuracy: true,\n            timeout: 10000,\n            maximumAge: 60000\n        }\n    );\n}\n\nfunction addNotificationStyles() {\n    if (!document.querySelector('#notification-styles')) {\n        const style = document.createElement('style');\n        style.id = 'notification-styles';\n        style.textContent = `\n            @keyframes slideIn {\n                from { transform: translateX(100%); opacity: 0; }\n                to { transform: translateX(0); opacity: 1; }\n            }\n            @keyframes slideOut {\n                from { transform: translateX(0); opacity: 1; }\n                to { transform: translateX(100%); opacity: 0; }\n            }\n            .notification-content {\n                display: flex;\n                align-items: center;\n                gap: 0.5rem;\n            }\n        `;\n        document.head.appendChild(style);\n    }\n}\n\n// Make showTab globally accessible\nwindow.showTab = showTab;\n\n// Initialize app when DOM is loaded\nif (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', initializeApp);\n} else {\n    initializeApp();\n}\n","size_bytes":28553},"style.css":{"content":"/* Reset and Base Styles */\n* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nbody {\n    font-family: 'Poppins', sans-serif;\n    line-height: 1.6;\n    color: #2e2e2e;\n    background-color: #fdf7f0;\n}\n\n.container {\n    max-width: 1200px;\n    margin: 0 auto;\n    padding: 0 20px;\n}\n\n/* Header Styles */\n.header {\n    background: linear-gradient(135deg, #f8bbd9, #fce4ec, #fff0f5);\n    padding: 1rem 0;\n    box-shadow: 0 2px 15px rgba(212, 175, 55, 0.2);\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    z-index: 1000;\n    border-bottom: 2px solid #d4af37;\n}\n\n.header .container {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.logo-container {\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n}\n\n.logo {\n    width: 50px;\n    height: 50px;\n}\n\n.logo-text h1 {\n    font-size: 1.5rem;\n    font-weight: 700;\n    color: #2e2e2e;\n    margin-bottom: -5px;\n}\n\n.logo-text p {\n    font-size: 0.8rem;\n    color: #666;\n    font-weight: 400;\n}\n\n.nav {\n    display: flex;\n    gap: 2rem;\n    align-items: center;\n    position: relative;\n}\n\n.nav-dropdown {\n    position: relative;\n}\n\n.dropdown-toggle::after {\n    content: ' ▼';\n    font-size: 0.8rem;\n    margin-left: 0.5rem;\n}\n\n.dropdown-menu {\n    position: absolute;\n    top: 100%;\n    right: 0;\n    background: white;\n    min-width: 150px;\n    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);\n    border-radius: 10px;\n    padding: 0.5rem 0;\n    opacity: 0;\n    visibility: hidden;\n    transform: translateY(-10px);\n    transition: all 0.3s ease;\n    z-index: 1000;\n}\n\n.nav-dropdown:hover .dropdown-menu {\n    opacity: 1;\n    visibility: visible;\n    transform: translateY(0);\n}\n\n.dropdown-link {\n    display: block;\n    padding: 0.5rem 1rem;\n    color: #2e2e2e;\n    text-decoration: none;\n    font-weight: 400;\n    transition: background-color 0.3s ease;\n}\n\n.dropdown-link:hover {\n    background-color: #f8f9fa;\n    color: #e91e63;\n}\n\n.nav-link {\n    text-decoration: none;\n    color: #2e2e2e;\n    font-weight: 500;\n    transition: color 0.3s ease;\n    position: relative;\n}\n\n.nav-link:hover {\n    color: #d4af37;\n}\n\n.nav-link::after {\n    content: '';\n    position: absolute;\n    width: 0;\n    height: 2px;\n    bottom: -5px;\n    left: 0;\n    background-color: #d4af37;\n    transition: width 0.3s ease;\n}\n\n.nav-link:hover::after {\n    width: 100%;\n}\n\n/* Hero Section */\n.hero {\n    background: linear-gradient(135deg, #f8bbd9, #fce4ec, #fff0f5);\n    padding: 120px 0 80px;\n    position: relative;\n    overflow: hidden;\n}\n\n.hero::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: radial-gradient(circle at 30% 50%, rgba(212, 175, 55, 0.1) 0%, transparent 50%);\n    pointer-events: none;\n}\n\n.hero-content {\n    text-align: center;\n    position: relative;\n    z-index: 2;\n}\n\n.hero-content h2 {\n    font-size: 3rem;\n    font-weight: 700;\n    color: #2e2e2e;\n    margin-bottom: 1rem;\n    line-height: 1.2;\n}\n\n.hero-content p {\n    font-size: 1.2rem;\n    color: #555;\n    margin-bottom: 2rem;\n    max-width: 600px;\n    margin-left: auto;\n    margin-right: auto;\n}\n\n.cta-button {\n    display: inline-block;\n    background: linear-gradient(135deg, #d4af37, #b8941f);\n    color: white;\n    text-decoration: none;\n    padding: 15px 40px;\n    border-radius: 30px;\n    font-weight: 600;\n    font-size: 1.1rem;\n    transition: all 0.3s ease;\n    box-shadow: 0 4px 15px rgba(212, 175, 55, 0.3);\n}\n\n.cta-button:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 6px 20px rgba(212, 175, 55, 0.4);\n}\n\n/* Services Section */\n.services {\n    padding: 80px 0;\n    background-color: #fafafa;\n}\n\n.section-title {\n    text-align: center;\n    font-size: 2.5rem;\n    font-weight: 700;\n    color: #2e2e2e;\n    margin-bottom: 3rem;\n    position: relative;\n}\n\n.section-title::after {\n    content: '';\n    position: absolute;\n    width: 80px;\n    height: 4px;\n    background: linear-gradient(135deg, #d4af37, #b8941f);\n    bottom: -10px;\n    left: 50%;\n    transform: translateX(-50%);\n    border-radius: 2px;\n}\n\n/* Service Categories */\n.service-category {\n    margin-bottom: 4rem;\n}\n\n.category-title {\n    font-size: 2rem;\n    font-weight: 600;\n    color: #2e2e2e;\n    margin-bottom: 2rem;\n    text-align: center;\n    background: linear-gradient(135deg, #d4af37, #f8bbd9);\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    background-clip: text;\n}\n\n/* Updated Service Card Styles */\n.service-pricing {\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n    margin: 1rem 0;\n}\n\n.current-price {\n    font-size: 1.4rem;\n    font-weight: 700;\n    color: #d4af37;\n}\n\n.original-price {\n    font-size: 1rem;\n    color: #999;\n    text-decoration: line-through;\n}\n\n.addon-badge {\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    background: linear-gradient(135deg, #f8bbd9, #d4af37);\n    color: #2e2e2e;\n    padding: 4px 8px;\n    border-radius: 12px;\n    font-size: 0.8rem;\n    font-weight: 600;\n}\n\n.addon-service {\n    border: 2px solid #f8bbd9;\n}\n\n/* Combo Section Styles */\n.combo-section {\n    background: linear-gradient(135deg, #fff0f5, #fdf7f0);\n    padding: 3rem;\n    border-radius: 20px;\n    margin-top: 3rem;\n}\n\n.combo-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n    gap: 2rem;\n    margin-top: 2rem;\n}\n\n.combo-card {\n    background: white;\n    border-radius: 15px;\n    padding: 2rem;\n    box-shadow: 0 8px 25px rgba(212, 175, 55, 0.1);\n    border: 2px solid transparent;\n    transition: all 0.3s ease;\n    cursor: pointer;\n}\n\n.combo-card:hover {\n    transform: translateY(-5px);\n    border-color: #d4af37;\n    box-shadow: 0 15px 35px rgba(212, 175, 55, 0.2);\n}\n\n.combo-card.premium {\n    border: 2px solid #d4af37;\n    background: linear-gradient(135deg, #fdf7f0, white);\n}\n\n.combo-card h3 {\n    color: #2e2e2e;\n    font-size: 1.3rem;\n    font-weight: 600;\n    margin-bottom: 1rem;\n}\n\n.combo-includes {\n    margin: 1.5rem 0;\n}\n\n.combo-includes p {\n    margin: 0.5rem 0;\n    color: #555;\n    font-size: 0.95rem;\n}\n\n.combo-pricing {\n    display: flex;\n    flex-direction: column;\n    gap: 0.5rem;\n}\n\n.combo-price {\n    font-size: 1.8rem;\n    font-weight: 700;\n    color: #d4af37;\n}\n\n.combo-savings {\n    font-size: 0.9rem;\n    color: #e91e63;\n    font-weight: 600;\n    background: rgba(248, 187, 217, 0.3);\n    padding: 4px 8px;\n    border-radius: 8px;\n    display: inline-block;\n    width: fit-content;\n}\n\n.services-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\n    gap: 2rem;\n    margin-top: 2rem;\n}\n\n.service-card {\n    background: white;\n    border-radius: 20px;\n    overflow: hidden;\n    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);\n    transition: all 0.3s ease;\n    cursor: pointer;\n}\n\n.service-card:hover {\n    transform: translateY(-5px);\n    box-shadow: 0 15px 35px rgba(0, 0, 0, 0.15);\n}\n\n.service-image {\n    position: relative;\n    height: 200px;\n    overflow: hidden;\n}\n\n.service-image img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    transition: transform 0.3s ease;\n}\n\n.service-card:hover .service-image img {\n    transform: scale(1.1);\n}\n\n.service-overlay {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: linear-gradient(45deg, rgba(233, 30, 99, 0.8), rgba(173, 20, 87, 0.8));\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    opacity: 0;\n    transition: opacity 0.3s ease;\n}\n\n.service-card:hover .service-overlay {\n    opacity: 1;\n}\n\n.service-overlay i {\n    font-size: 3rem;\n    color: white;\n}\n\n.service-content {\n    padding: 1.5rem;\n}\n\n.service-content h3 {\n    font-size: 1.3rem;\n    font-weight: 600;\n    color: #2e2e2e;\n    margin-bottom: 0.5rem;\n}\n\n.service-content p {\n    color: #666;\n    margin-bottom: 1rem;\n    line-height: 1.5;\n}\n\n.service-price {\n    font-weight: 600;\n    color: #e91e63;\n    font-size: 1.1rem;\n    margin-bottom: 0.5rem;\n}\n\n.service-rating {\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n}\n\n.stars {\n    color: #ffc107;\n    font-size: 1rem;\n}\n\n.rating-text {\n    font-size: 0.9rem;\n    color: #666;\n}\n\n/* Booking Section */\n.booking {\n    padding: 80px 0;\n    background: linear-gradient(135deg, #fce4ec, #f8bbd9);\n}\n\n.booking-container {\n    display: grid;\n    grid-template-columns: 1fr 300px;\n    gap: 3rem;\n    align-items: start;\n}\n\n.booking-form {\n    background: white;\n    padding: 2rem;\n    border-radius: 20px;\n    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\n}\n\n.form-group {\n    margin-bottom: 1.5rem;\n}\n\n.form-row {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: 1rem;\n}\n\n.form-group label {\n    display: block;\n    margin-bottom: 0.5rem;\n    font-weight: 500;\n    color: #2e2e2e;\n}\n\n.form-group input,\n.form-group select,\n.form-group textarea {\n    width: 100%;\n    padding: 12px 15px;\n    border: 2px solid #e0e0e0;\n    border-radius: 10px;\n    font-size: 1rem;\n    transition: border-color 0.3s ease;\n    font-family: 'Poppins', sans-serif;\n}\n\n.form-group input:focus,\n.form-group select:focus,\n.form-group textarea:focus {\n    outline: none;\n    border-color: #e91e63;\n    box-shadow: 0 0 0 3px rgba(233, 30, 99, 0.1);\n}\n\n.form-group textarea {\n    resize: vertical;\n    min-height: 100px;\n}\n\n.error-message {\n    display: block;\n    color: #f44336;\n    font-size: 0.8rem;\n    margin-top: 0.25rem;\n    min-height: 1rem;\n}\n\n.submit-button {\n    width: 100%;\n    background: linear-gradient(135deg, #25d366, #128c7e);\n    color: white;\n    border: none;\n    padding: 15px;\n    border-radius: 10px;\n    font-size: 1.1rem;\n    font-weight: 600;\n    cursor: pointer;\n    transition: all 0.3s ease;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 0.5rem;\n}\n\n.submit-button:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 5px 15px rgba(37, 211, 102, 0.3);\n}\n\n.submit-button i {\n    font-size: 1.2rem;\n}\n\n/* Booking Info */\n.booking-info {\n    display: flex;\n    flex-direction: column;\n    gap: 1.5rem;\n}\n\n.info-card {\n    background: white;\n    padding: 1.5rem;\n    border-radius: 15px;\n    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n}\n\n.info-card i {\n    font-size: 2rem;\n    color: #e91e63;\n    min-width: 40px;\n}\n\n.info-card h4 {\n    font-size: 1.1rem;\n    font-weight: 600;\n    color: #2e2e2e;\n    margin-bottom: 0.25rem;\n}\n\n.info-card p {\n    color: #666;\n    line-height: 1.4;\n}\n\n/* Footer */\n.footer {\n    background-color: #2e2e2e;\n    color: white;\n    padding: 2rem 0 1rem;\n}\n\n.footer-content {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: 2rem;\n    margin-bottom: 2rem;\n}\n\n.footer-logo {\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n}\n\n.footer-logo img {\n    width: 40px;\n    height: 40px;\n    filter: brightness(0) invert(1);\n}\n\n.footer-logo p {\n    color: #ccc;\n}\n\n.footer-contact h4 {\n    margin-bottom: 1rem;\n    color: #e91e63;\n}\n\n.footer-contact p {\n    margin-bottom: 0.5rem;\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n}\n\n.footer-contact i {\n    color: #e91e63;\n    width: 16px;\n}\n\n.footer-bottom {\n    text-align: center;\n    padding-top: 1rem;\n    border-top: 1px solid #444;\n    color: #ccc;\n}\n\n/* Responsive Design */\n@media (max-width: 768px) {\n    .header .container {\n        flex-direction: column;\n        gap: 1rem;\n    }\n    \n    .nav {\n        gap: 1rem;\n    }\n    \n    .hero-content h2 {\n        font-size: 2rem;\n    }\n    \n    .hero-content p {\n        font-size: 1rem;\n    }\n    \n    .services-grid {\n        grid-template-columns: 1fr;\n    }\n    \n    .booking-container {\n        grid-template-columns: 1fr;\n        gap: 2rem;\n    }\n    \n    .form-row {\n        grid-template-columns: 1fr;\n    }\n    \n    .booking-info {\n        order: -1;\n    }\n    \n    .footer-content {\n        grid-template-columns: 1fr;\n        text-align: center;\n    }\n    \n    .info-card {\n        flex-direction: column;\n        text-align: center;\n    }\n}\n\n@media (max-width: 480px) {\n    .container {\n        padding: 0 15px;\n    }\n    \n    .hero {\n        padding: 100px 0 60px;\n    }\n    \n    .hero-content h2 {\n        font-size: 1.8rem;\n    }\n    \n    .section-title {\n        font-size: 2rem;\n    }\n    \n    .booking-form {\n        padding: 1.5rem;\n    }\n    \n    .logo-text h1 {\n        font-size: 1.2rem;\n    }\n    \n    .logo-text p {\n        font-size: 0.7rem;\n    }\n}\n\n/* Service Selection Highlight */\n.service-card.selected {\n    border: 3px solid #e91e63;\n    transform: translateY(-3px);\n}\n\n.service-card.selected .service-overlay {\n    opacity: 1;\n}\n\n/* Form Validation Styles */\n.form-group input.error,\n.form-group select.error,\n.form-group textarea.error {\n    border-color: #f44336;\n    box-shadow: 0 0 0 3px rgba(244, 67, 54, 0.1);\n}\n\n.form-group input.valid,\n.form-group select.valid,\n.form-group textarea.valid {\n    border-color: #4caf50;\n    box-shadow: 0 0 0 3px rgba(76, 175, 80, 0.1);\n}\n\n/* Loading Button State */\n.submit-button.loading {\n    opacity: 0.8;\n    cursor: not-allowed;\n}\n\n.submit-button.loading::after {\n    content: '';\n    width: 16px;\n    height: 16px;\n    margin-left: 8px;\n    border: 2px solid transparent;\n    border-top: 2px solid #ffffff;\n    border-radius: 50%;\n    animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n}\n\n/* Smooth Scrolling */\nhtml {\n    scroll-behavior: smooth;\n}\n\n/* Date Input Styling */\ninput[type=\"date\"] {\n    position: relative;\n}\n\ninput[type=\"date\"]::-webkit-calendar-picker-indicator {\n    color: #e91e63;\n    cursor: pointer;\n}\n\n/* About Section */\n.about {\n    padding: 80px 0;\n    background-color: #fff;\n}\n\n.about-content {\n    display: grid;\n    grid-template-columns: 2fr 1fr;\n    gap: 4rem;\n    align-items: center;\n}\n\n.about-text h3 {\n    font-size: 2rem;\n    color: #2e2e2e;\n    margin-bottom: 1rem;\n    font-weight: 600;\n}\n\n.about-text p {\n    font-size: 1.1rem;\n    color: #666;\n    line-height: 1.7;\n    margin-bottom: 2rem;\n}\n\n.features-grid {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    gap: 1.5rem;\n}\n\n.feature-item {\n    display: flex;\n    align-items: flex-start;\n    gap: 1rem;\n}\n\n.feature-item i {\n    font-size: 1.5rem;\n    color: #e91e63;\n    margin-top: 0.2rem;\n    min-width: 24px;\n}\n\n.feature-item h4 {\n    font-size: 1.1rem;\n    color: #2e2e2e;\n    margin-bottom: 0.25rem;\n    font-weight: 600;\n}\n\n.feature-item p {\n    color: #666;\n    font-size: 0.9rem;\n    line-height: 1.5;\n    margin: 0;\n}\n\n.about-stats {\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n}\n\n.stat-item {\n    text-align: center;\n    padding: 1.5rem;\n    background: linear-gradient(135deg, #fce4ec, #f8bbd9);\n    border-radius: 15px;\n    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\n}\n\n.stat-item h3 {\n    font-size: 2.5rem;\n    color: #e91e63;\n    margin-bottom: 0.5rem;\n    font-weight: 700;\n}\n\n.stat-item p {\n    color: #2e2e2e;\n    font-weight: 500;\n    margin: 0;\n}\n\n/* Reviews Section */\n.reviews {\n    padding: 80px 0;\n    background-color: #fafafa;\n}\n\n.reviews-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n    gap: 2rem;\n    margin-bottom: 3rem;\n}\n\n.review-card {\n    background: white;\n    padding: 2rem;\n    border-radius: 15px;\n    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\n    transition: transform 0.3s ease;\n}\n\n.review-card:hover {\n    transform: translateY(-3px);\n}\n\n.review-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 1rem;\n}\n\n.reviewer-info {\n    display: flex;\n    align-items: center;\n    gap: 0.75rem;\n}\n\n.reviewer-info img {\n    width: 50px;\n    height: 50px;\n    border-radius: 50%;\n    object-fit: cover;\n}\n\n.reviewer-info h4 {\n    color: #2e2e2e;\n    margin-bottom: 0.25rem;\n    font-weight: 600;\n}\n\n.reviewer-info p {\n    color: #666;\n    font-size: 0.9rem;\n    margin: 0;\n}\n\n.review-rating {\n    color: #ffc107;\n    font-size: 1.1rem;\n}\n\n.review-card p {\n    color: #444;\n    line-height: 1.6;\n    margin-bottom: 1rem;\n    font-style: italic;\n}\n\n.review-card small {\n    color: #888;\n    font-size: 0.8rem;\n}\n\n.review-summary {\n    text-align: center;\n    background: white;\n    padding: 2rem;\n    border-radius: 15px;\n    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\n}\n\n.review-summary h3 {\n    font-size: 2rem;\n    color: #2e2e2e;\n    margin-bottom: 0.5rem;\n}\n\n.review-summary p {\n    color: #666;\n    margin-bottom: 1.5rem;\n}\n\n.rating-breakdown {\n    max-width: 300px;\n    margin: 0 auto;\n}\n\n.rating-bar {\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n    margin-bottom: 0.5rem;\n}\n\n.rating-bar span:first-child {\n    color: #ffc107;\n    min-width: 30px;\n}\n\n.rating-bar span:last-child {\n    min-width: 40px;\n    text-align: right;\n    color: #666;\n}\n\n.bar {\n    flex: 1;\n    height: 8px;\n    background: #e0e0e0;\n    border-radius: 4px;\n    overflow: hidden;\n}\n\n.fill {\n    height: 100%;\n    background: linear-gradient(135deg, #e91e63, #ad1457);\n    transition: width 0.3s ease;\n}\n\n/* Products Section */\n.products {\n    padding: 80px 0;\n    background: white;\n}\n\n.section-subtitle {\n    text-align: center;\n    color: #666;\n    font-size: 1.1rem;\n    margin-bottom: 3rem;\n}\n\n.products-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n    gap: 2rem;\n}\n\n.product-card {\n    background: white;\n    border-radius: 15px;\n    overflow: hidden;\n    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\n    transition: all 0.3s ease;\n    position: relative;\n}\n\n.product-card:hover {\n    transform: translateY(-5px);\n    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);\n}\n\n.product-image {\n    position: relative;\n    height: 200px;\n    overflow: hidden;\n}\n\n.product-image img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    transition: transform 0.3s ease;\n}\n\n.product-card:hover .product-image img {\n    transform: scale(1.05);\n}\n\n.product-badge {\n    position: absolute;\n    top: 10px;\n    left: 10px;\n    background: #e91e63;\n    color: white;\n    padding: 0.25rem 0.75rem;\n    border-radius: 15px;\n    font-size: 0.8rem;\n    font-weight: 600;\n}\n\n.product-content {\n    padding: 1.5rem;\n}\n\n.product-content h3 {\n    color: #2e2e2e;\n    margin-bottom: 0.5rem;\n    font-weight: 600;\n}\n\n.product-content p {\n    color: #666;\n    margin-bottom: 1rem;\n    font-size: 0.9rem;\n}\n\n.product-price {\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n    margin-bottom: 1rem;\n}\n\n.original-price {\n    color: #999;\n    text-decoration: line-through;\n    font-size: 0.9rem;\n}\n\n.discounted-price {\n    color: #e91e63;\n    font-weight: 700;\n    font-size: 1.1rem;\n}\n\n.add-to-cart-btn {\n    width: 100%;\n    background: linear-gradient(135deg, #e91e63, #ad1457);\n    color: white;\n    border: none;\n    padding: 0.75rem;\n    border-radius: 8px;\n    font-weight: 600;\n    cursor: pointer;\n    transition: all 0.3s ease;\n}\n\n.add-to-cart-btn:hover {\n    transform: translateY(-1px);\n    box-shadow: 0 3px 10px rgba(233, 30, 99, 0.3);\n}\n\n/* FAQ Section */\n.faq {\n    padding: 80px 0;\n    background-color: #fafafa;\n}\n\n.faq-container {\n    max-width: 800px;\n    margin: 0 auto;\n}\n\n.faq-item {\n    background: white;\n    margin-bottom: 1rem;\n    border-radius: 10px;\n    overflow: hidden;\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);\n}\n\n.faq-question {\n    padding: 1.5rem;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    cursor: pointer;\n    transition: background-color 0.3s ease;\n}\n\n.faq-question:hover {\n    background-color: #f8f9fa;\n}\n\n.faq-question h3 {\n    color: #2e2e2e;\n    font-weight: 600;\n    margin: 0;\n}\n\n.faq-icon {\n    font-size: 1.5rem;\n    color: #e91e63;\n    font-weight: bold;\n    transition: transform 0.3s ease;\n}\n\n.faq-item.active .faq-icon {\n    transform: rotate(45deg);\n}\n\n.faq-answer {\n    padding: 0 1.5rem;\n    max-height: 0;\n    overflow: hidden;\n    transition: all 0.3s ease;\n}\n\n.faq-item.active .faq-answer {\n    padding: 0 1.5rem 1.5rem;\n    max-height: 200px;\n}\n\n.faq-answer p {\n    color: #666;\n    line-height: 1.6;\n    margin: 0;\n}\n\n/* Refer Section */\n.refer {\n    padding: 80px 0;\n    background: linear-gradient(135deg, #fce4ec, #f8bbd9);\n}\n\n.refer-content {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: 3rem;\n    align-items: center;\n}\n\n.refer-text h2 {\n    color: #2e2e2e;\n    font-size: 2.5rem;\n    margin-bottom: 0.5rem;\n    font-weight: 700;\n}\n\n.refer-text h3 {\n    color: #e91e63;\n    font-size: 1.5rem;\n    margin-bottom: 1rem;\n    font-weight: 600;\n}\n\n.refer-text p {\n    color: #666;\n    font-size: 1.1rem;\n    line-height: 1.6;\n    margin-bottom: 2rem;\n}\n\n.refer-steps {\n    display: flex;\n    gap: 1rem;\n    margin-bottom: 2rem;\n}\n\n.step {\n    text-align: center;\n    flex: 1;\n}\n\n.step-number {\n    width: 40px;\n    height: 40px;\n    border-radius: 50%;\n    background: #e91e63;\n    color: white;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-weight: bold;\n    margin: 0 auto 0.5rem;\n}\n\n.step p {\n    color: #2e2e2e;\n    font-weight: 500;\n    font-size: 0.9rem;\n    margin: 0;\n}\n\n.referral-code {\n    background: white;\n    padding: 1.5rem;\n    border-radius: 10px;\n    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\n}\n\n.referral-code p {\n    margin-bottom: 1rem;\n    color: #2e2e2e;\n}\n\n.share-btn {\n    background: linear-gradient(135deg, #25d366, #128c7e);\n    color: white;\n    border: none;\n    padding: 0.75rem 1.5rem;\n    border-radius: 8px;\n    font-weight: 600;\n    cursor: pointer;\n    transition: all 0.3s ease;\n}\n\n.share-btn:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 5px 15px rgba(37, 211, 102, 0.3);\n}\n\n.refer-image img {\n    width: 100%;\n    height: auto;\n    border-radius: 15px;\n    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\n}\n\n/* Contact Section */\n.contact {\n    padding: 80px 0;\n    background: white;\n}\n\n.contact-container {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: 3rem;\n}\n\n.contact-info h3 {\n    color: #2e2e2e;\n    font-size: 1.8rem;\n    margin-bottom: 2rem;\n    font-weight: 600;\n}\n\n.contact-item {\n    display: flex;\n    align-items: flex-start;\n    gap: 1rem;\n    margin-bottom: 2rem;\n}\n\n.contact-item i {\n    font-size: 1.5rem;\n    color: #e91e63;\n    margin-top: 0.25rem;\n    min-width: 24px;\n}\n\n.contact-item h4 {\n    color: #2e2e2e;\n    margin-bottom: 0.25rem;\n    font-weight: 600;\n}\n\n.contact-item p {\n    color: #666;\n    margin: 0;\n    line-height: 1.5;\n}\n\n.contact-form {\n    background: #fafafa;\n    padding: 2rem;\n    border-radius: 15px;\n}\n\n.contact-form h3 {\n    color: #2e2e2e;\n    margin-bottom: 1.5rem;\n    font-weight: 600;\n}\n\n.submit-btn {\n    width: 100%;\n    background: linear-gradient(135deg, #e91e63, #ad1457);\n    color: white;\n    border: none;\n    padding: 1rem;\n    border-radius: 8px;\n    font-weight: 600;\n    cursor: pointer;\n    transition: all 0.3s ease;\n}\n\n.submit-btn:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 5px 15px rgba(233, 30, 99, 0.3);\n}\n\n/* Modal Styles */\n.modal {\n    display: none;\n    position: fixed;\n    z-index: 10000;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.5);\n    backdrop-filter: blur(5px);\n}\n\n.modal-content {\n    background-color: white;\n    margin: 5% auto;\n    padding: 2rem;\n    border-radius: 15px;\n    width: 90%;\n    max-width: 400px;\n    position: relative;\n    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.2);\n}\n\n.close {\n    position: absolute;\n    right: 1rem;\n    top: 1rem;\n    font-size: 2rem;\n    font-weight: bold;\n    cursor: pointer;\n    color: #999;\n    transition: color 0.3s ease;\n}\n\n.close:hover {\n    color: #e91e63;\n}\n\n.auth-tabs {\n    display: flex;\n    border-bottom: 1px solid #e0e0e0;\n    margin-bottom: 2rem;\n}\n\n.tab-btn {\n    flex: 1;\n    padding: 1rem;\n    border: none;\n    background: none;\n    cursor: pointer;\n    font-weight: 600;\n    color: #666;\n    transition: all 0.3s ease;\n}\n\n.tab-btn.active {\n    color: #e91e63;\n    border-bottom: 2px solid #e91e63;\n}\n\n.tab-content {\n    display: none;\n}\n\n.tab-content.active {\n    display: block;\n}\n\n.tab-content h3 {\n    color: #2e2e2e;\n    margin-bottom: 1.5rem;\n    text-align: center;\n}\n\n.auth-btn {\n    width: 100%;\n    background: linear-gradient(135deg, #e91e63, #ad1457);\n    color: white;\n    border: none;\n    padding: 1rem;\n    border-radius: 8px;\n    font-weight: 600;\n    cursor: pointer;\n    transition: all 0.3s ease;\n    margin-bottom: 1rem;\n}\n\n.auth-btn:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 5px 15px rgba(233, 30, 99, 0.3);\n}\n\n.tab-content p {\n    text-align: center;\n    color: #666;\n    margin: 0;\n}\n\n.tab-content a {\n    color: #e91e63;\n    text-decoration: none;\n    font-weight: 600;\n}\n\n/* Service Detail Pages */\n.service-detail {\n    padding: 80px 0;\n    background: white;\n    display: none;\n}\n\n.service-detail.active {\n    display: block;\n}\n\n.service-header {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: 3rem;\n    align-items: center;\n    margin-bottom: 3rem;\n}\n\n.service-header img {\n    width: 100%;\n    height: 300px;\n    object-fit: cover;\n    border-radius: 15px;\n    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\n}\n\n.service-info h2 {\n    font-size: 2.5rem;\n    color: #2e2e2e;\n    margin-bottom: 1rem;\n    font-weight: 700;\n}\n\n.service-info p {\n    font-size: 1.1rem;\n    color: #666;\n    line-height: 1.6;\n    margin-top: 1rem;\n}\n\n.service-details-grid {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: 3rem;\n}\n\n.service-options h3 {\n    font-size: 1.5rem;\n    color: #2e2e2e;\n    margin-bottom: 1.5rem;\n    font-weight: 600;\n}\n\n.option-card {\n    background: #fafafa;\n    padding: 1.5rem;\n    border-radius: 10px;\n    margin-bottom: 1rem;\n    border-left: 4px solid #e91e63;\n}\n\n.option-card h4 {\n    color: #2e2e2e;\n    font-size: 1.2rem;\n    margin-bottom: 0.5rem;\n    font-weight: 600;\n}\n\n.option-card p {\n    color: #666;\n    margin-bottom: 0.75rem;\n    font-size: 0.9rem;\n}\n\n.option-card .price {\n    color: #e91e63;\n    font-weight: 700;\n    font-size: 1.1rem;\n}\n\n.booking-form {\n    background: linear-gradient(135deg, #fce4ec, #f8bbd9);\n    padding: 2rem;\n    border-radius: 15px;\n    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\n}\n\n.booking-form h3 {\n    color: #2e2e2e;\n    margin-bottom: 1.5rem;\n    font-weight: 600;\n    text-align: center;\n}\n\n.book-btn {\n    width: 100%;\n    background: linear-gradient(135deg, #25d366, #128c7e);\n    color: white;\n    border: none;\n    padding: 1rem;\n    border-radius: 10px;\n    font-weight: 600;\n    font-size: 1.1rem;\n    cursor: pointer;\n    transition: all 0.3s ease;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 0.5rem;\n}\n\n.book-btn:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 5px 15px rgba(37, 211, 102, 0.3);\n}\n\n.book-btn::before {\n    content: '📱';\n    font-size: 1.2rem;\n}\n\n/* Navigation Enhancement */\n.nav-link {\n    position: relative;\n    transition: all 0.3s ease;\n}\n\n.nav-link:hover {\n    color: #e91e63;\n    transform: translateY(-1px);\n}\n\n.nav-link.active {\n    color: #e91e63;\n    font-weight: 600;\n}\n\n.nav-link.active::after {\n    content: '';\n    position: absolute;\n    bottom: -5px;\n    left: 0;\n    width: 100%;\n    height: 2px;\n    background: #e91e63;\n    border-radius: 2px;\n}\n\n/* Responsive Updates */\n@media (max-width: 768px) {\n    .nav {\n        flex-wrap: wrap;\n        gap: 1rem;\n    }\n    \n    .nav-dropdown {\n        order: -1;\n        width: 100%;\n    }\n    \n    .dropdown-menu {\n        position: static;\n        opacity: 1;\n        visibility: visible;\n        transform: none;\n        box-shadow: none;\n        background: none;\n        padding: 0;\n        display: flex;\n        gap: 1rem;\n        flex-wrap: wrap;\n    }\n    \n    .about-content {\n        grid-template-columns: 1fr;\n        gap: 2rem;\n    }\n    \n    .features-grid {\n        grid-template-columns: 1fr;\n    }\n    \n    .about-stats {\n        flex-direction: row;\n        gap: 1rem;\n    }\n    \n    .stat-item {\n        padding: 1rem;\n    }\n    \n    .stat-item h3 {\n        font-size: 1.8rem;\n    }\n    \n    .reviews-grid {\n        grid-template-columns: 1fr;\n    }\n    \n    .products-grid {\n        grid-template-columns: repeat(2, 1fr);\n    }\n    \n    .refer-content {\n        grid-template-columns: 1fr;\n        gap: 2rem;\n    }\n    \n    .refer-steps {\n        flex-direction: column;\n        gap: 1rem;\n    }\n    \n    .step {\n        display: flex;\n        align-items: center;\n        gap: 1rem;\n        text-align: left;\n    }\n    \n    .step-number {\n        margin: 0;\n    }\n    \n    .contact-container {\n        grid-template-columns: 1fr;\n        gap: 2rem;\n    }\n}\n\n@media (max-width: 480px) {\n    .products-grid {\n        grid-template-columns: 1fr;\n    }\n    \n    .about-stats {\n        flex-direction: column;\n        gap: 1rem;\n    }\n    \n    .refer-text h2 {\n        font-size: 2rem;\n    }\n    \n    .refer-text h3 {\n        font-size: 1.2rem;\n    }\n    \n    .service-header {\n        grid-template-columns: 1fr;\n        gap: 2rem;\n    }\n    \n    .service-details-grid {\n        grid-template-columns: 1fr;\n        gap: 2rem;\n    }\n    \n    .service-info h2 {\n        font-size: 2rem;\n    }\n}\n\n/* Help Text Styling */\n.help-text {\n    display: block;\n    font-size: 0.8rem;\n    color: #666;\n    margin-top: 0.25rem;\n    font-style: italic;\n}\n\n.form-group input[type=\"url\"] {\n    background: #f8f9fa;\n    border: 1px solid #ddd;\n    transition: all 0.3s ease;\n}\n\n.form-group input[type=\"url\"]:focus {\n    border-color: #e91e63;\n    background: white;\n    box-shadow: 0 0 0 3px rgba(233, 30, 99, 0.1);\n}\n\n/* Location Input Container */\n.location-inputs {\n    display: flex;\n    gap: 0.5rem;\n    align-items: center;\n}\n\n.location-inputs input {\n    flex: 1;\n}\n\n.location-btn {\n    background: linear-gradient(135deg, #4caf50, #45a049);\n    color: white;\n    border: none;\n    padding: 0.75rem 1rem;\n    border-radius: 8px;\n    font-weight: 600;\n    font-size: 0.9rem;\n    cursor: pointer;\n    transition: all 0.3s ease;\n    white-space: nowrap;\n    min-width: 140px;\n}\n\n.location-btn:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 4px 12px rgba(76, 175, 80, 0.3);\n}\n\n.location-btn:disabled {\n    opacity: 0.7;\n    cursor: not-allowed;\n    transform: none;\n    box-shadow: none;\n}\n\n.location-btn:active {\n    transform: translateY(0);\n}\n\n/* Responsive location inputs */\n@media (max-width: 768px) {\n    .location-inputs {\n        flex-direction: column;\n        gap: 0.75rem;\n    }\n    \n    .location-inputs input {\n        width: 100%;\n    }\n    \n    .location-btn {\n        width: 100%;\n        min-width: unset;\n    }\n}\n","size_bytes":30677}}}